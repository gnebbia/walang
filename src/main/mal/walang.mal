/*
 * Copyright 2021 Giuseppe Nebbione
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#id: "ml.gnebbia.walang"
#version: "1.0.0"

category WebSystem {

  asset WebServer 
  user info: "The WebServer hosting the Web Application."
  { 
      | dosVulnerability
          user info: "A denial-of-service vulnerability makes the data unavailable."
          -> data.unavailable
      | rceVulnerability
          user info: "A remote code execution vulnerability allows to execute commands on the webserver."
          -> privilegedCodeExecution,
             data.read,
             data.write,
             data.delete,
             data.unavailable
      | privescVulnerability
          user info: "A privilege escalation vulnerability allows to execute commands as the administrator (e.g., root)."
          -> privilegedCodeExecution
      # fullyPatchedWebServer
          user info: "If the server is fully patched then it is not vulnerable to known weaknesses."
          -> dosVulnerability,
             rceVulnerability
      & privilegedCodeExecution
          user info: "A privileged code execution is obtained only if there is a remote code execution vulnerability coupled with a Privilege Escalation vulnerability"
  }

  asset WebServerConfiguration 
  user info: "A WebServer has a configuration that can be useful to set some security-related options."
  { 
    | tlsDisabled
        user info: "If TLS is disabled, encryption for data is not available."
        -> webserver.dataflows.eavesdrop,
           webserver.dataflows.manInTheMiddle,
           cookieEavesdrop
    # encryption
        user info: "Enabling appropriate encryption prevents all threats associated to transmission of plaintext data."
        -> tlsDisabled

    | xssProtectionDisabled
        user info: "If the X-XSS-Protection header is disabled the web Application may be more likely open to XSS attacks"
        -> webserver.webapplication.xss
    # xssProtectionEnabled
        user info: "If the X-XSS-Protection header is enabled the web Application is protected from certain kinds of XSS attacks."
        -> xssProtectionDisabled

    | xFrameOptionsDisabled
        user info: "If the X-Frame-Options header is disabled the Web Application is vulnerable to clickjacking attacks."
        -> webserver.webapplication.clickjacking
    # xFrameOptionsEnabled
        user info: "If the X-Frame-Options header is enabled the Web Application cannot be embedded into a frame hence it is not vulnerable to clickjacking attacks."
        -> xFrameOptionsDisabled

    | secureFlagDisabled
        user info: "If cookies are not set with the 'secure' flag, they may be eavesdropped."
        -> cookieEavesdrop
    # secureFlagEnabled
        user info: "If cookies are set with the 'secure' flag, they may not be eavesdropped."
        -> secureFlagDisabled

    & cookieEavesdrop
        user info: "If cookies are not set with the 'secure' flag and the web Application is not using TLS then cookies can be eavesdropped."
  }

  asset Data 
  user info: "Data in this context is generic and represents all the data managed by the Web Application."
  {
    | read
    | write
    | delete
    | unavailable
    user info: "Unavailable data is equivalent to a Denial-of-Service attack on data."
  }

  asset DataFlow 
  user info: "A DataFlow represents data that is transmitted."
  {
    | eavesdrop
        user info: "An attacker that eavesdrops the dataflow can access the contained data."
        -> data.read
    | denialOfService
        user info: "A denial-of-service attack on the dataflow makes the contained data inaccessible."
        -> data.delete
    | manInTheMiddle
        user info: "A man-in-the-middle attack on the dataflow allows different operation on data."
        -> data.read,
           data.write,
           data.delete
  }

  asset DataBase
  user info: "A DataBase contains data that is at rest."
  { 
    | read
        -> databaseData.read
    | write
        -> databaseData.write
    | delete
        -> databaseData.delete
  }

  asset Endpoint
  user info: "An endpoint is a resource or an URL within a Web Application."
  {
    | discover
        -> access,
           connect
    | connect
        -> access
    & access
        -> inputfields.discover
  }

  asset PrivateEndpoint extends Endpoint 
  user info: "A PrivateEndpoint is a resource or an URL within a Web Application accessible only to a specific logged-on user."
  developer info: "An example may be an URL containing sensitive info related to the logged-on user."
  { 
     
    & access
        -> privilegeMisconfiguration
    | privilegeMisconfiguration
        -> account.infoDisclosure
  }


  asset WebApplication
  user info: "The Web Application under exam."
  { 
    | crawl
        -> endpoints.discover,
           adminarea.discover
    | directoryBruteForce
        -> endpoints.discover,
           adminarea.discover,
           endpoints[PrivateEndpoint].discover
    | clickjacking
    | xss
    | abusePrivileges
    | infoDisclosure
    | deface
  }


  asset SecurityToken
  user info: "A security token can be used to manage access control for users within the Web Application."
  {
    | obtain
      -> account.authenticate
  }

  asset Password extends SecurityToken 
  user info: "A password is a security token used to authenticate users within the Web Application."
  { 
    // intentionally left blank
  }

  asset Cookie extends SecurityToken
  user info: "A cookie in this context is inteded as an authorization cookie that can be used by attackers to impersonate other users."
  { 
    // intentionally left blank
  }


  asset InputField 
  user info: "An InputField represents everything that can be manipulated by the user, such as parameters of HTTP requests or form fields contained in web pages."
  { 
    | discover
        user info: "A discovered input field can be fuzzed by an attacker."
        -> fuzz
    | fuzz
        user info: "Extensive Fuzzing could lead to the exploitation of different vulnerabilities."
        -> sqlinjection,
           xss
    | sqlinjection [Exponential(0.02)]
        user info: "SQL Injection allows access to the database associated to the Web Application."
        -> dbs.read,
           dbs.write,
           dbs.delete
    | xss [Exponential(0.02)]
        user info: "XSS allows to abuse privileges related to other users."
        -> webapplication.abusePrivileges
  }



  // asset Resource
  // user info: "A resource represents a file, a webpage or any other media that can be accessed from the Web Application."
  // { 
  //   // intentionally left blank
  // }


  asset AdminArea 
  user info: "An AdminArea represents the area of Application where administrators its administrators can log-in."
  {
    | discover
        user info: "Sometimes Admin Areas are hidden and must be discovered to be accessed."
        -> access,
           connect
    | connect
        -> access
    | authenticate
        -> access
    | guessPassword
        -> guessedPassword
    | guessedPassword [Exponential(0.02)]
        -> administrators.authenticate
    # twoFactorAuthentication
        -> guessedPassword
    & access
        -> webapplication.deface,
           webapplication.abusePrivileges,
           webapplication.infoDisclosure
  }

  asset Account
  user info: "An Account represents something that can be used to log-in."
  {
    | authenticate
    | impersonate
    // maybe add abuseprivileges?
    | infoDisclosure
    // maybe add data.read ??
  }

  asset Administrator extends Account
  user info: "An Administrator is an account that can log-in into the AdminArea."
  {
    // intentionally left blank
  }

  asset User 
  user info: "A User uses the Web Application by using an account."
  {
    | attemptPhishing
        -> phish
    | phish [Exponential(0.1)]
        -> account.tokens.obtain
  }

}

associations {
  WebServer[webserver]           1    <--    Hosts          -->    1 [webapplication]WebApplication

  WebServer[webserver]           1    <--    Configuration  -->    1 [config]WebServerConfiguration
  WebServer[webserver]           1    <--    Transmission   -->    * [dataflows]DataFlow
  WebServer[webserver]           1    <--    RetrieveInfo   -->    * [data]Data


  WebApplication[webapplication] 1    <--    Compose        -->    * [endpoints]Endpoint

  WebApplication[webapplication] 1    <--    Administration -->    1 [adminarea]AdminArea
  WebApplication[webapplication] 1    <--    Containment    -->    * [inputfields]InputField

  Endpoint[url]                  1    <--    Contains       -->    * [inputfields]InputField


  InputField[inputfield]         1    <--    Interact       -->    * [dbs]DataBase


  AdminArea[adminarea]           1    <--    Administration -->    * [administrators]Administrator

  User[user]                     1    <--    UserAccount    -->    1 [account]Account
  
  Account[account]               1    <--    Credentials    -->    * [tokens]SecurityToken
  Account[account]               1    <--    Resources      -->    * [privateurls]PrivateEndpoint

  DataFlow[dataflow]             1    <--    Transmission   -->    * [data]Data
  DataBase[db]                   1    <--    DataStore      -->    * [databaseData]Data
}



// [ANALYZER WARNING] <walang.mal:274:3> Association 'Endpoint [url] <-- Contains --> InputField [inputfields]' is never used
// [ANALYZER WARNING] <walang.mal:283:3> Association 'User [user] <-- Transmission --> DataFlow [dataflow]' is never used
